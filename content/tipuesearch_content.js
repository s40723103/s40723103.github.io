var tipuesearch = {"pages": [{'title': '介紹Github', 'text': '在深入了解python 的魅力所在後，相信你也會覺得程式很有趣。 \n', 'tags': '', 'url': '介紹Github.html'}, {'title': 'CMSimfly介紹', 'text': '在 https://github.com/chiamingyen/cmsimfly 的倉儲中，可學習到運作模式與他的原理。 \n 簡單來說。CMSimfly是在Python中缺一不可的重要角色之一。 \n 所有運作皆需要用到 CMSimfly。 \n 因此請好好摸索。 \n CMSimfly 的動態系統採用  Python3 + Flask  建構, 並且利用  Beatifulsoup  解讀位於 contig 目錄中的 content.htm 超文件檔案. \n content.htm 檔案可以透過動態系統中的 generate_pages 功能, 將超文件轉為位於 content 目錄中的個別頁面檔案. \n 動態系統與靜態系統則共用 downloads, images, static 等目錄, 其中 downloads 目錄存放在動態系統上傳的文件檔, 而 images 目錄則存放動態系統所上傳的影像檔案, 包括 jpg, png 與 gif 等格式圖檔. \n static 目錄則存放在動態與靜態系統所需要的 Javascript 或 Brython 程式檔. \n', 'tags': '', 'url': 'CMSimfly介紹.html'}, {'title': '版本', 'text': 'CMSimfly 目前使用 Syntaxhighlighter 3.0.83: \n \xa0 http://alexgorbatchev.com/SyntaxHighlighter/ \xa0 \n 進行頁面中的程式碼高亮顯示. \n', 'tags': '', 'url': '版本.html'}, {'title': 'Python簡介', 'text': '\n 容易撰寫 \n Python 通常可以靠比較短的程式碼完成比較多的功能，或者可以寫得比較清楚。 \n 功能強大 \n 絕大部分都是開放原始碼的，與主要作業系統的支援功能等等，含括的範圍非常地廣泛。 \n 跨平台 \n 各種主要的作業系統都支援 Python。不需要修改。所撰寫的程式透過標準的模組進行包裝後，用標準的方式即可安裝於各種平台。 \n 容易擴充 \n 為執行效率不錯的直譯式語言。Python本身被設計為可擴充的。因此，有很多人把Python作為一種「膠水語言」（glue language）使用。使用Python將其他語言編寫的程式進行整合和封裝。 \n', 'tags': '', 'url': 'Python簡介.html'}, {'title': '術語解說', 'text': '編譯器 \n 將程式碼編譯為機器碼，再加以執行，用編譯語言寫成的程式，在執行期的執行速度，通常比用直譯語言寫的程式快。因為程式在編譯期，已經被預先編譯成機器碼，可以直接執行。 \n 直譯語言 \n 直譯語言是一種程式語言，會將程式碼一句一句直接執行，不需要像編譯語言一樣，經過編譯器先行編譯為機器碼，之後再執行。 \n 高階程式語言 \n 是高度封裝了的程式語言。以人類的日常語言為基礎的一種程式語言，使用一般人易於接受的文字來表示，有較高的可讀性，以方便對電腦認知較淺的人亦可以大概明白其內容。 \n 低階程式語言 \n 為電腦科學相關的術語，指的是一類電腦程式語言。它很少提供或不提供電腦的指令集體系結構->也就是語言對映中與處理器指令緊密相關的命令或函式。 \n', 'tags': '', 'url': '術語解說.html'}, {'title': 'History of Python', 'text': '為廣泛使用的高階程式語言，由 吉多·范羅蘇姆 創造，作為一種 直譯語言 ，設計哲學強調程式碼的可讀性和簡潔的語法，讓開發者能夠用更少的代碼表達想法，該語言都試圖讓程式的結構清晰明了。 \n 從 ABC 發展而來的，雖然被粗略地分類為「指令碼語言」，但實際上一些大規模軟體開發計劃例如Zope、Mnet及BitTorrent，Google也廣泛地使用它。 \n Python的支持者較喜歡稱它為一種 高階動態程式語言 ， 原因是「指令碼語言」泛指僅作簡單程式設計任務的語言。 \n 而正式直譯器CPython是用 C語言 編寫的、是一個由社群驅動的自由軟體。 \n 支援多種編程範式 ，包括物件導向、命令式、函數式和程序式編程，本身擁有一個巨大而廣泛的標準庫。 \n \xa0 \n \xa0 \n \n \n', 'tags': '', 'url': 'History of Python.html'}, {'title': '基本設定操作', 'text': '主要複習上學期的教學課程內容與增加學期中所操作時的心得 \n https://www.ithome.com.tw/news/95283 \n 以上網址可較認識到GIT的操作與功用 \n', 'tags': '', 'url': '基本設定操作.html'}, {'title': '創建Github帳號', 'text': '\n 1. 先到github之網站點選創建帳號 \n \n 2. 之後會測試是否為機器人操作，下一階段為填寫為何需要github的表單，可選擇填寫(看個人)，填寫完畢即可直接進入github使用軟體。 \n \n', 'tags': '', 'url': '創建Github帳號.html'}, {'title': '設定Python和Proxy的代理主機', 'text': '\n 1. 進入Proxy裡設定 \n \n 2. 輸入伺服器網路位置 \n \n 3. 儲存後重新連接即可獲取該伺服器之網路。 \n \n', 'tags': '', 'url': '設定Python和Proxy的代理主機.html'}, {'title': '進入倉儲之步驟', 'text': '\n 1 . 先複製倉儲之網址 \n \n 2. 之後git clone下來 \n \n 3. 下載完成後打開近端 \n \n 4. 複製網址後Login完即可對倉儲改版 \n \n', 'tags': '', 'url': '進入倉儲之步驟.html'}, {'title': '更新倉儲改版', 'text': '\n 1. 先個別clone下來兩個需將合併的倉儲。 \n 一.先下載新版倉儲資訊。 \n \n 二.再下載自己的倉儲。 \n \n 2. 之後複製貼上需要更新的資料並蓋 過，即可完成。 \n \n *補 : 原本倉儲中config目錄不須被覆蓋，因為裡面的資料是在倉儲中所有變動的紀錄，假設被新版倉儲覆蓋將會遺失所有更改資料。', 'tags': '', 'url': '更新倉儲改版.html'}, {'title': '找尋倉儲網址', 'text': '1. 在倉儲setting裡可更改。 \n \n 2. 之後變更完成即可找到倉儲網址。 \n', 'tags': '', 'url': '找尋倉儲網址.html'}, {'title': '程式操作運用', 'text': '\n \n 1. 先到mde.tw之 網際內容管理網誌 點選 20 19_cdb_w5.7z \xa0下載 \n \n 2. 開始練習指令 \n D: \xa0 \xa0 去D槽之區域 \n cd\xa0 \xa0 進入資料夾 \n cd \\\xa0 \xa0or\xa0cd . 返回根目錄 \n git init\xa0 增加數據庫 \n git clone 下載(後面需增加網址) \n git add .\xa0 \xa0 快照，將工作區資料加入索引 \n git status 確認工作目錄與索引狀態 \n git pull 檢查近遠端是否連接 \n git commit -m "檔案名稱" 推送上去之前所包裝之資料夾 \n git push 推送(會問帳號密碼) \n git branch 查看分支 \n git merge(分支名稱) \xa0 將某分支合併到目前分支，有commit \n git rebase(分支名稱)\xa0 將目前分支合併到某分支中，不會有commit \n git\xa0 checkout \xa0 將開端移動HEAD \n git log 檢視提交紀錄 \n git log --oneline --graph --all 要求出現開頭的列表 \n git diff 查看上一個資料 \n git stash 移除上一個資料 \n python\xa0 --version 查看python之版本 \n git remote\xa0 顯示遠端儲存庫 \n git clean\xa0 刪除工作區中未被追蹤的文件', 'tags': '', 'url': '程式操作運用.html'}, {'title': '各種程式範例', 'text': '', 'tags': '', 'url': '各種程式範例.html'}, {'title': 'Java 程式碼', 'text': 'import java.util.Scanner;\n\npublic class Life {\n    public static void show(boolean[][] grid){\n        String s = "";\n        for(boolean[] row : grid){\n            for(boolean val : row)\n                if(val)\n                    s += "*";\n                else\n                    s += ".";\n            s += "\\n";\n        }\n        System.out.println(s);\n    }\n    \n    public static boolean[][] gen(){\n        boolean[][] grid = new boolean[10][10];\n        for(int r = 0; r < 10; r++)\n            for(int c = 0; c < 10; c++)\n                if( Math.random() > 0.7 )\n                    grid[r][c] = true;\n        return grid;\n    }\n    \n    public static void main(String[] args){\n        boolean[][] world = gen();\n        show(world);\n        System.out.println();\n        world = nextGen(world);\n        show(world);\n        Scanner s = new Scanner(System.in);\n        while(s.nextLine().length() == 0){\n            System.out.println();\n            world = nextGen(world);\n            show(world);\n            \n        }\n    }\n    \n    public static boolean[][] nextGen(boolean[][] world){\n        boolean[][] newWorld \n            = new boolean[world.length][world[0].length];\n        int num;\n        for(int r = 0; r < world.length; r++){\n            for(int c = 0; c < world[0].length; c++){\n                num = numNeighbors(world, r, c);\n                if( occupiedNext(num, world[r][c]) )\n                    newWorld[r][c] = true;\n            }\n        }\n        return newWorld;\n    }\n    \n    public static boolean occupiedNext(int numNeighbors, boolean occupied){\n        if( occupied && (numNeighbors == 2 || numNeighbors == 3))\n            return true;\n        else if (!occupied && numNeighbors == 3)\n            return true;\n        else\n            return false;\n    }\n\n    private static int numNeighbors(boolean[][] world, int row, int col) {\n        int num = world[row][col] ? -1 : 0;\n        for(int r = row - 1; r <= row + 1; r++)\n            for(int c = col - 1; c <= col + 1; c++)\n                if( inbounds(world, r, c) && world[r][c] )\n                    num++;\n\n        return num;\n    }\n\n    private static boolean inbounds(boolean[][] world, int r, int c) {\n        return r >= 0 && r < world.length && c >= 0 &&\n        c < world[0].length;\n    }\n\n} \n', 'tags': '', 'url': 'Java 程式碼.html'}, {'title': 'Python 程式碼', 'text': 'def parse_content():\n    """use bs4 and re module functions to parse content.htm"""\n    #from pybean import Store, SQLiteWriter\n    # if no content.db, create database file with cms table\n    \'\'\'\n    if not os.path.isfile(config_dir+"content.db"):\n        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))\n        cms = library.new("cms")\n        cms.follow = 0\n        cms.title = "head 1"\n        cms.content = "content 1"\n        cms.memo = "first memo"\n        library.save(cms)\n        library.commit()\n    \'\'\'\n    # if no content.htm, generate a head 1 and content 1 file\n    if not os.path.isfile(config_dir+"content.htm"):\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n    subject = file_get_contents(config_dir+"content.htm")\n    # deal with content without content\n    if subject == "":\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n        subject = "<h1>head 1</h1>content 1"\n    # initialize the return lists\n    head_list = []\n    level_list = []\n    page_list = []\n    # make the soup out of the html content\n    soup = bs4.BeautifulSoup(subject, \'html.parser\')\n    # 嘗試解讀各種情況下的標題\n    soup = _remove_h123_attrs(soup)\n    # 改寫 content.htm 後重新取 subject\n    with open(config_dir + "content.htm", "wb") as f:\n        f.write(soup.encode("utf-8"))\n    subject = file_get_contents(config_dir+"content.htm")\n    # get all h1, h2, h3 tags into list\n    htag= soup.find_all([\'h1\', \'h2\', \'h3\'])\n    n = len(htag)\n    # get the page content to split subject using each h tag\n    temp_data = subject.split(str(htag[0]))\n    if len(temp_data) > 2:\n        subject = str(htag[0]).join(temp_data[1:])\n    else:\n        subject = temp_data[1]\n    if n >1:\n            # i from 1 to i-1\n            for i in range(1, len(htag)):\n                head_list.append(htag[i-1].text.strip())\n                # use name attribute of h* tag to get h1, h2 or h3\n                # the number of h1, h2 or h3 is the level of page menu\n                level_list.append(htag[i-1].name[1])\n                temp_data = subject.split(str(htag[i]))\n                if len(temp_data) > 2:\n                    subject = str(htag[i]).join(temp_data[1:])\n                else:\n                    subject = temp_data[1]\n                # cut the other page content out of htag from 1 to i-1\n                cut = temp_data[0]\n                # add the page content\n                page_list.append(cut)\n    # last i\n    # add the last page title\n    head_list.append(htag[n-1].text.strip())\n    # add the last level\n    level_list.append(htag[n-1].name[1])\n    temp_data = subject.split(str(htag[n-1]))\n    # the last subject\n    subject = temp_data[0]\n    # cut the last page content out\n    cut = temp_data[0]\n    # the last page content\n    page_list.append(cut)\n    return head_list, level_list, page_list\n\n \n', 'tags': '', 'url': 'Python 程式碼.html'}, {'title': 'C或C++程式碼', 'text': '請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為\xa0 "C/C++程式碼", 則無法進行分頁. \n /* Runge Kutta for a set of first order differential equations */\n \n#include <stdio.h>\n#include <math.h>\n \n#define N 2 /* number of first order equations */\n#define dist 0.1 /* stepsize in t*/\n#define MAX 30.0 /* max for t */\n \nFILE *output; /* internal filename */\nFILE *output1; /* internal filename */\n// 利用 pipe 呼叫 gnuplot 繪圖\nFILE *pipe;\n \nvoid runge4(double x, double y[], double step); /* Runge-Kutta function */\ndouble f(double x, double y[], int i); /* function for derivatives */\n \nvoid main(){\n \n  double t, y[N];\n  int j;\n \n  output=fopen("osc.dat", "w"); /* external filename */\n  output1=fopen("osc1.dat", "w"); /* external filename */\n \n  y[0]=1.0; /* initial position */\n  y[1]=0.0; /* initial velocity */\n \n  //fprintf(output, "0\\t%f\\n", y[0]);\n \n  for (j=1; j*dist<=MAX ;j++) /* time loop */{\n \n    t=j*dist;\n    runge4(t, y, dist);\n    fprintf(output, "%f\\t%f\\n", t, y[0]);\n    fprintf(output1, "%f\\t%f\\n", t, y[1]);\n  }\n \n  fclose(output);\n  fclose(output1);\n \n  pipe = popen("gnuplot -persist","w");\n  //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n");\n  fprintf(pipe,"set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n");\n  //fprintf(pipe,"set yrange [68:70]\\n");\n  fprintf(pipe,"set output \\"test.png\\"\\n");\n  fprintf(pipe, "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n");\n  fprintf(pipe,"quit\\n");\n\n  fprintf(pipe,"quit\\n");\n  pclose(pipe);\n}\n \nvoid runge4(double x, double y[], double step){\n \n  double h=step/2.0, /* the midpoint */\n  t1[N], t2[N], t3[N], /* temporary storage arrays */\n  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */\n  int i;\n \n  for (i=0;i<N;i++){\n \n    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    k4[i]= step*f(x+step, t3, i);\n  }\n \n  for (i=0;i<N;i++){\n \n    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;\n  }\n}\n \ndouble f(double x, double y[], int i){\n \n  if (i==0)\n    x=y[1]; /* derivative of first equation */\n  if (i==1)\n    x=-y[0]-0.5*y[1];\n  return x;\n} \n', 'tags': '', 'url': 'C或C++程式碼.html'}, {'title': 'Lua 程式碼', 'text': '-- 導入 js 模組\njs = require("js")\n-- 取得 window\nwindow = js.global\n-- 猜小於或等於 n 的整數\nbig = 100\n-- 計算猜測次數, 配合 while 至少會猜一次\nnum = 1\n-- 利用 window:prompt 方法回應取得使用者所猜的整數\nguess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")\n-- 利用數學模組的 random 函數以亂數產生答案\nanswer = math.random(big)\noutput = ""\n-- 若沒猜對, 一直猜到對為止\nwhile answer ~= tonumber(guess) do\n    if answer > tonumber(guess) then\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"\n        print(output)\n    else\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"\n        print(output)\n    end \n    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")\n    num = num + 1\nend\nprint("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")\n     \n', 'tags': '', 'url': 'Lua 程式碼.html'}, {'title': 'Javascript 程式碼', 'text': 'STLViewer = function(stlpath, plotarea) {\n\n\tvar mycanvas = document.getElementById(plotarea);\n\tvar viewer = new JSC3D.Viewer(mycanvas)\n\tvar theScene = new JSC3D.Scene;\n\t////Initialize with a default file:\n\t//var stlpath = "../../../assets/2013-10-23/stl/box.STL"\n\t//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"\n\tviewer.setParameter(\'SceneUrl\', stlpath);\n    viewer.setParameter(\'InitRotationX\', 20);\n\tviewer.setParameter(\'InitRotationY\', 20);\n\tviewer.setParameter(\'InitRotationZ\', 0);\n\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\tviewer.init();\n\tviewer.update();\n\t////init done\n\tvar canvas_drop = document.getElementById(\'canvas-drop\')\n\t/*var dropzone = document.getElementById(\'dropzone\')\n\tdropzone.addEventListener(\'dragover\', handleDragOver, false);\n\tdropzone.addEventListener(\'drop\', handleFileSelect, false); */\n\tcanvas_drop.addEventListener(\'dragover\', handleDragOver, false);\n\tcanvas_drop.addEventListener(\'drop\', handleFileSelect, false);\n\n////Drag and drop logic:\n\tfunction handleFileSelect(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    var files = evt.dataTransfer.files;\n\t    console.log(evt)\n\t    console.log(files)\n\t    preview_stl(files[0])\n\t  }\n\n\t  function handleDragOver(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    evt.dataTransfer.dropEffect = \'copy\';\n\t  }\n\n////jsc3d logic\n\tvar handle_file_select = function(e) {\n\t\te.stopPropagation()\n\t\te.preventDefault()\n\t\tvar f = e.target.files[0]\n\t\tpreview_stl(f)\n\t}\n\n\tfunction preview_stl(f) {\n\t\tvar reader = new FileReader()\n\t\tvar ext = f.name.split(".")[1]\n\n\t\tfunction setup_viewer() {\n\t\t\tviewer.setParameter(\'InitRotationX\', 20);\n\t\t\tviewer.setParameter(\'InitRotationY\', 20);\n\t\t\tviewer.setParameter(\'InitRotationZ\', 0);\n\t\t\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\t\t\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\t\t\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\t\t\tviewer.setParameter(\'RenderMode\', "flat");\n\t\t}\n\t\tsetup_viewer()\n\n\t\treader.onload = (function(file) {\n\t\t\treturn function(e) {\n\t\t\t\ttheScene = new JSC3D.Scene\n\t\t    \tstl_loader = new JSC3D.StlLoader()\n\t\t    \tstl_loader.parseStl(theScene, e.target.result)\n\t\t      \t//viewer.init()\n\t\t      \tviewer.replaceScene(theScene)\n\t\t      \tviewer.update()\n\t\t      \tconsole.log("file reader onload")\n\t\t\t}\n\t\t})(f)\n\n\t\tif (ext.toLowerCase() != "stl") {\n\t\t\talert("That doesn\'t appear to be an STL file.");\n\t\t} else {\n\t\t\treader.readAsBinaryString(f)\n\t\t}\n\t}\n}\n \n', 'tags': '', 'url': 'Javascript 程式碼.html'}, {'title': 'Html 原始碼', 'text': '<html>\n   <head>\n      <meta http-equiv="content-type" content="text/html;charset=utf-8">\n      <title>CMSimfly</title>\n      <link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n   </head>\n   <body>\n      <div class=\'container\'>\n      <nav>\n         <ul id=\'css3menu1\' class=\'topmenu\'>\n            <li><a href=\'/get_page/簡介\'>簡介</a>\n            <li><a href=\'/get_page/目錄結構\'>目錄結構</a>\n            <li>\n               <a href=\'/get_page/頁面編輯\'>頁面編輯</a>\n               <ul>\n                  <li>\n                     <a href=\'/get_page/插入程式碼\'>插入程式碼</a>\n                     <ul>\n                        <li><a href=\'/get_page/Java 程式碼\'>Java 程式碼</a>\n                        <li><a href=\'/get_page/Python 程式碼\'>Python 程式碼</a>\n                        <li><a href=\'/get_page/C或C++程式碼\'>C或C++程式碼</a>\n                        <li><a href=\'/get_page/Lua 程式碼\'>Lua 程式碼</a>\n                        <li><a href=\'/get_page/Javascript 程式碼\'>Javascript 程式碼</a>\n                        <li><a href=\'/get_page/Html 原始碼\'>Html 原始碼</a></li>\n                        </li>\n                     </ul>\n               </ul>\n            <li><a href=\'/get_page/網際簡報\'>網際簡報</a>\n            <li><a href=\'/get_page/網誌編輯\'>網誌編輯</a>\n            <li><a href=\'/get_page/已知錯誤\'>已知錯誤</a></li>\n         </ul>\n      </nav>\n      <section>\n         <form method=\'post\' action=\'/ssavePage\'>\n         <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'><h3>Html 原始碼</h3></textarea>\n         <input type=\'hidden\' name=\'page_order\' value=\'9\'>\n         <input type=\'submit\' value=\'save\'>\n         <input type=button onClick="location.href=\'/get_page/Html 原始碼\'" value=\'viewpage\'>\n         </form>\n      </section>\n   </body>\n</html>\nCOPY TO CLIPBOARD\t \n', 'tags': '', 'url': 'Html 原始碼.html'}, {'title': '修正錯誤', 'text': '期中問題 \n 1. 單機與網路差別 \n \xa0\xa0 單機之資料庫只供本機使用，網路之資料庫為透過區域網路設定可供多人共用。 \n 2 . 為什麼協同反而無法取得正確近端 \n \xa0因為協同後，需要pull request才能真正取得倉儲之近端，在指令馬中打git pull，即可將近端 \n \xa0遠端統合， 便可把資料push上去。 \n 3. 兩個人同時 用近端 並同時上傳檔案，但有合併衝突怎麼辦 \n \xa0先將.htm檔拖曳到SciTE文字編輯器，找出衝突點，並刪除頭(<<<<<<<)尾(>>>>>>>)與接\xa0合處 (=======)後，儲存並重新進入近端，將之轉成Generapage，最後git add .\xa0 gitcommit \n \xa0\xa0 git push。 \n 4 . 為什麼倉儲會突然找不到網頁，但在遠端還可以看到 \n 有可能是因為檔案中又包住另一個git clone 下來的資料，造成程式碼衝突，因而，使得變成404網頁。 \n \xa0* 處理方式:建議不要將檔案連續包夾在同一個資料夾裡面。 \n 5. 為什麼更改字型但是網頁爆掉 \n 由於前後自行更改大小不一，因而造成網頁爆掉，需要到SciTE去刪除設定大小的前後(head3) \n 即可救回網頁。 P.S.建議不要隨便更改字型大小。 \n 6. 網頁爆掉如何救回 \n 檢視問題點在哪行程式碼，將之移除，並重新檢視、送出，以下為指令: \n Git log (查看從最近到最遠得提交日誌) \n Git checkout 7碼 (丟棄工作區文檔的修改) \n Git status (查看當前git倉儲狀態) \n Git diff  (查看修改的文檔內容) \n Git status (查看當前git倉儲狀態) \n Git stash (將寫到一半的代碼從工作區拿走存起來) \n Git status (查看當前git倉儲狀態) \n 期末問題 \n 1. 新版與舊版倉儲產生倉儲 \n 將舊版倉儲一律改版成新版，在原先舊版資料檔中保存config目錄，之後將新版倉儲資料複製撇除git檔全部覆蓋後，重新進入近端推送變更資料後即可解決衝突問題。 \n 補:假如沒有去做更新改版的動作，可能會導致資料推送不完整或是push不上去的問題。 \n 可參考以下影片操作 \n \n 2. 資料推送不上去 \n \n 可參考以下應片來解決，最有影響的部分可能在於近端遠端沒有做統一彙整成一樣的，導致資訊核對時產生錯誤，應使用git pull解決，之後再確認其他部分是否成立，並commit，即可解決此問題。 \n \n (圖為push產生問題範例) \n 3. 組別倉儲在推送後其他組員也剛好在改版，因而產生版面衝突 \n 在新版推送完畢後，組員使用舊版要推送之時產生衝突，會有一些指示建議你，大概會使用到.... \n git pull \n git commit \n git status \n git add . \n git merge \n 這些指令會一直無限循環到推送完成。 \n \n 將.htm檔拖曳到SciTE文字編輯器，找出衝突點，並刪除頭(<<<<<<<)尾(>>>>>>>)與接\xa0合處 (=======)後儲存， 之後再次確認是否改版，進入近端查看發現會有一些地方重複而產生錯誤版面，去編輯將重複的資訊刪除再重新推送，即可完成最新版的倉儲。 \n 4. 資料上傳不上去導至網頁錯誤的原因 \n Y:\\>cd project \n Y:\\project>dir \n Y:\\project>cd cmstest>更換目錄到contest \n Y:\\project\\cmstest>python wsgi.py \n 進入address可改版，一˙但改版可進行版次推送 \n Login完week2打入根據[...網址...]完成ungit的配置，按github page，回到ungit網頁，push上去。 \n 假如網頁出現錯誤: \n 由於沒有在Home底下有對應的git config \n Home(外部)\xa0 \xa0 Home_cadlab(內部) \n 先檢查有無gitconfig!', 'tags': '', 'url': '修正錯誤.html'}, {'title': '進階挑戰', 'text': '挑戰更加困難也繁瑣的操作. \n \n .', 'tags': '', 'url': '進階挑戰.html'}, {'title': '設定路徑說明', 'text': '導入ungit \n nodejs裡面有ungit->程式為nodejs所寫，nodejs位置在 appdata->roming->npm->ungi \xa0。 \n 程式碼在appdata->roming->npm->node-modules->ungit->CHANGELOG.md。 \n \xa0 \n start.bat跟start.cadlab.bat差別 \n 因Home位置不同，適用範圍有所不同!! \n start.bat=>學校外適用。 \n start.cadlab.bat=>學校內適用，不能使用在學校外的地方。 \n \n STAPE1 \n \n 1 .設定路徑=> \n \xa0 \xa0 set path8=%Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm;放置到start.cadlab的sciTE裡\xa0 \xa0 \xa0 的path7後。 \n \n 2 .將 path8 納入 path 設定=> \n \xa0 \xa0 %path8%；->讓nodejs.ungit直行即可使用。 \n \n \xa0 \xa0 在同上步驟中的sciTE中有path程式碼將%path8%；直接放在最後方。 \n \n \n \xa0 \n \n \n 3 .分別start.bat跟start.cadlab.bat都如上兩步驟操作並儲存。 \n \n \n \xa0 \n \n \n 4 .按start.cadlab.bat打入ungit可作執行，之後出現頁面表示設定成功，按允許儲存，再將跳出\xa0 \xa0 \xa0 \xa0 的網頁關掉。 \n \n \n \xa0 \n \n \n 5 .針對nodejs設定路徑=> \n \n \n \xa0 \xa0 [set. USERPROFILE=%Disk%:\\home]start.cadlab.bat中需加入以上程式碼\xa0\xa0\xa0\xa0\xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0在\xa0set.HOME=%Disk%:\\home-cadlab之下方增加。 \n \n \n \xa0 *將以上程式關掉(剛才使用的程式碼還不用關。若關掉，kmol-2019->data->scite->bin->按\xa0 \xa0 \xa0 \xa0 \xa0 scite黑色圓點。 \n \n \n 以便能作動，因nodejs系統user的路徑找git的設定檔，但找不到，又因為需變為可攜程式，必須透過上述方式來作動!! \n \n \n 6 .start.bat也是上述步驟重複一遍。完成初步動作。。。。。 \n \n STAPE2 \n \n 可在mde.tw中2019 spring...裡，實習任務之任務2有明確步驟可找到下面的程式。 \n \n \n ungit --launchBrowser=0 --launchCommand "C:\\PROGRA~2\\Google\\Chrome\\Application\\chrome.exe\xa0 %U" \n \n \n 需使用簡寫，不然無法啟動。並新建批次檔。 \n', 'tags': '', 'url': '設定路徑說明.html'}, {'title': '新建批次檔步驟', 'text': 'Q 如何建立批次檔 ? \n \n Step1 ；去SciTe新建檔案>將程式複製貼上 >Save as 在隨身碟Y槽 \n \xa0 \xa0 \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0[為了與ungit作區別，因此將其名稱為kungit.bat]>從可攜home找出對應的git \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 設定 \n \n Step2 :去隨身碟Y槽>home>查看有無git設定>沒有的話測試程式碼能否運作>git clone測試網頁 \n \n 打開ungit在CMS下面的各時間提交之內容>[進入測試網頁>打kungit指令] \n \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 條件 :\xa0 1.必須在某個git倉儲下指令(cd....)>目的為由Chrom開啟 \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 2.必須啟動ungit對應的的\\批次檔。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0為了確保關閉nodejs不干擾運作，下載process explorer ，取64....的Z複製下來，貼在y槽以便隨時關閉程式。 \n 找到在最下面的綠色node按右鍵kill process>把nodejs上次對應的8443的批次檔關閉，指令便可正常運作。(即可不會抱怨。) \n 刪除nodejs之8443的批號後，重新打入kungit指令即可看到ungit網頁跳出。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n \n \n \xa0 \xa0\xa0 \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0 \n \n \n', 'tags': '', 'url': '新建批次檔步驟.html'}, {'title': '已知錯誤', 'text': '全部頁面會因無法正確解讀而誤刪 \n 在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理. \n 頁面標題不支援特殊符號 \n 各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能. \n Video 引用不支援內部引用 \n tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結.', 'tags': '', 'url': '已知錯誤.html'}]};